diff --git a/meson.build b/meson.build
index a577ac7..b341114 100644
--- a/meson.build
+++ b/meson.build
@@ -1593,6 +1593,7 @@ foreach term : ['analyze',
                 'ldconfig',
                 'localed',
                 'logind',
+                'journald',
                 'machined',
                 'networkd',
                 'nscd',
@@ -1603,6 +1604,7 @@ foreach term : ['analyze',
                 'pstore',
                 'quotacheck',
                 'randomseed',
+                'removable',
                 'resolve',
                 'rfkill',
                 'smack',
@@ -1612,6 +1614,7 @@ foreach term : ['analyze',
                 'timesyncd',
                 'tmpfiles',
                 'tpm',
+                'udev',
                 'userdb',
                 'utmp',
                 'vconsole',
@@ -2126,7 +2129,13 @@ subdir('src/core')
 # systemd-networkd requires 'libsystemd_network'
 subdir('src/libsystemd-network')
 # hwdb requires 'udev_link_with' and 'udev_rpath'
-subdir('src/udev')
+if get_option('udev')
+        subdir('src/udev')
+else
+        udev_link_with = []
+        udev_rpath = ''
+        udev_pc = []
+endif
 
 subdir('src/ac-power')
 subdir('src/analyze')
@@ -2233,7 +2242,11 @@ subdir('src/fuzz')
 subdir('src/ukify/test')  # needs to be last for test_env variable
 subdir('test/fuzz')
 
-alias_target('devel', libsystemd_pc, libudev_pc, systemd_pc, udev_pc)
+devel_targets = [libsystemd_pc, libudev_pc, systemd_pc]
+if get_option('udev')
+        devel_targets += [udev_pc]
+endif
+alias_target('devel', devel_targets)
 
 ############################################################
 
@@ -2457,7 +2470,9 @@ endif
 
 ############################################################
 
-subdir('rules.d')
+if get_option('udev')
+        subdir('rules.d')
+endif
 subdir('test')
 
 ############################################################
@@ -2790,6 +2805,7 @@ foreach tuple : [
         ['kernel-install'],
         ['localed'],
         ['logind'],
+        ['journald'],
         ['machined'],
         ['networkd'],
         ['nss-myhostname'],
@@ -2801,6 +2817,7 @@ foreach tuple : [
         ['pstore'],
         ['quotacheck'],
         ['randomseed'],
+        ['removable'],
         ['repart'],
         ['resolve'],
         ['rfkill'],
@@ -2812,6 +2829,7 @@ foreach tuple : [
         ['timedated'],
         ['timesyncd'],
         ['tmpfiles'],
+        ['udev'],
         ['userdb'],
         ['vconsole'],
         ['vmspawn'],
diff --git a/meson_options.txt b/meson_options.txt
index 83b48ff..77ba65d 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -112,14 +112,20 @@ option('pstore', type : 'boolean',
        description : 'install the pstore archival tool')
 option('oomd', type : 'boolean',
        description : 'install the userspace oom killer')
+option('check-filesystems', type : 'boolean', value : true,
+       description : 'run check-filesystems.sh during configuration')
 option('logind', type : 'boolean',
        description : 'install the systemd-logind stack')
+option('journald', type : 'boolean', value : true,
+       description : 'install the systemd-journald stack')
 option('hostnamed', type : 'boolean',
        description : 'install the systemd-hostnamed stack')
 option('localed', type : 'boolean',
        description : 'install the systemd-localed stack')
 option('machined', type : 'boolean',
        description : 'install the systemd-machined stack')
+option('udev', type : 'boolean', value : true,
+       description : 'install the systemd-udevd stack')
 option('portabled', type : 'boolean',
        description : 'install the systemd-portabled stack')
 option('sysext', type : 'boolean',
@@ -152,6 +158,8 @@ option('firstboot', type : 'boolean',
        description : 'support for firstboot mechanism')
 option('randomseed', type : 'boolean',
        description : 'support for restoring random seed')
+option('removable', type : 'boolean', value : true,
+       description : 'install the systemd-remount-fs helper')
 option('backlight', type : 'boolean',
        description : 'support for restoring backlight state')
 option('vconsole', type : 'boolean',
diff --git a/src/remount-fs/meson.build b/src/remount-fs/meson.build
index 8761d25..6704aa8 100644
--- a/src/remount-fs/meson.build
+++ b/src/remount-fs/meson.build
@@ -3,6 +3,7 @@
 executables += [
         libexec_template + {
                 'name' : 'systemd-remount-fs',
+                'conditions' : ['ENABLE_REMOVABLE'],
                 'sources' : files('remount-fs.c'),
         },
 ]
diff --git a/units/meson.build b/units/meson.build
index e7bfb7f..0940c02 100644
--- a/units/meson.build
+++ b/units/meson.build
@@ -95,7 +95,7 @@ units = [
         },
         {
           'file' : 'initrd-udevadm-cleanup-db.service',
-          'conditions' : ['ENABLE_INITRD'],
+          'conditions' : ['ENABLE_INITRD', 'ENABLE_UDEV'],
         },
         {
           'file' : 'initrd-usr-fs.target',
@@ -525,7 +525,10 @@ units = [
           'symlinks' : ['sysinit.target.wants/'],
         },
         { 'file' : 'systemd-reboot.service' },
-        { 'file' : 'systemd-remount-fs.service.in' },
+        {
+          'file' : 'systemd-remount-fs.service.in',
+          'conditions' : ['ENABLE_REMOVABLE'],
+        },
         {
           'file' : 'systemd-repart.service.in',
           'conditions' : ['ENABLE_REPART'],
diff --git a/src/basic/meson.build b/src/basic/meson.build
index d7450d8..f19e17f 100644
--- a/src/basic/meson.build
+++ b/src/basic/meson.build
@@ -232,10 +232,12 @@ run_target(
 filesystem_includes = ['linux/magic.h',
                        'linux/gfs2_ondisk.h']
 
-check_filesystems = find_program('check-filesystems.sh')
-r = run_command([check_filesystems, cpp, files('filesystems-gperf.gperf')] + filesystem_includes, check: false)
-if r.returncode() != 0
-        error('Unknown filesystems defined in kernel headers:\n\n' + r.stdout())
+if get_option('check-filesystems')
+        check_filesystems = find_program('check-filesystems.sh')
+        r = run_command([check_filesystems, cpp, files('filesystems-gperf.gperf')] + filesystem_includes, check: false)
+        if r.returncode() != 0
+                error('Unknown filesystems defined in kernel headers:\n\n' + r.stdout())
+        endif
 endif
 
 filesystems_gperf_h = custom_target(
diff --git a/test/fuzz/meson.build b/test/fuzz/meson.build
index 54cbb75..799c7f6 100644
--- a/test/fuzz/meson.build
+++ b/test/fuzz/meson.build
@@ -6,9 +6,13 @@ fuzz_regression_tests = {}
 
 directives = [['fuzz-network-parser', 'directives.network', networkd_network_gperf_gperf],
               ['fuzz-netdev-parser', 'directives.netdev',   networkd_netdev_gperf_gperf],
-              ['fuzz-link-parser', 'directives.link',       udev_link_gperf_gperf],
              ]
 
+if get_option('udev')
+        directives += [['fuzz-link-parser', 'directives.link', udev_link_gperf_gperf]]
+endif
+
+
 foreach tuple : directives
         directive = custom_target(
                 tuple[1],
